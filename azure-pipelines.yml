trigger:
  - main # Replace with your branch name

pool:
  vmImage: "windows-latest"

variables:
  solutionName: SFADOStateless
  solution: "**/*.sln"
  sfproj: "**/*.sfproj"
  buildPlatform: x64
  buildConfiguration: "Debug"
  applicationPackagePath: '$(Build.ArtifactStagingDirectory)\ApplicationPackage'
  serviceConnectionName: serviceFabricCluster
  artifactName: drop
  System.Debug: true
  environmentName: $(solutionName)$(buildConfiguration)
  TimeoutSec: 600
  artifactsPipeline: SFADOStateless
  artifactsReleasePipeline: SFADOStateless

steps:
- task: UseDotNet@2
  inputs:
    packageType: "sdk"
    version: "8.x" # Match your .NET SDK version

- task: NuGetCommand@2
  inputs:
    command: "restore"
    restoreSolution: "**/*.sln"

- task: VSBuild@1
  inputs:
    solution: "**/*.sln"
    msbuildArgs: "/p:Configuration=$(buildConfiguration)"
    clean: true
    restoreNugetPackages: true

- task: MSBuild@1
  inputs:
    solution: "**/*.sfproj"
    msbuildArguments: '/t:Package /p:Configuration=$(BuildConfiguration) /p:OutDir=$(Build.BinariesDirectory)\'
    platform: "$(BuildPlatform)"
    configuration: "$(BuildConfiguration)"

- task: PublishBuildArtifacts@1
  inputs:
    pathToPublish: '$(Build.SourcesDirectory)\$(artifactsPipeline)\pkg\$(BuildConfiguration)'
    artifactName: "$(artifactsPipeline)"

- task: DownloadBuildArtifacts@0
  inputs:
    buildType: "current"
    downloadType: "single"
    artifactName: "$(artifactsPipeline)"
    downloadPath: "$(System.DefaultWorkingDirectory)"

- task: ServiceFabricDeploy@1
  inputs:
    serviceConnectionName: "billysadosfmc"
    applicationPackagePath: "$(System.DefaultWorkingDirectory)/$(artifactsPipeline)"
    overwriteBehavior: "SameAppTypeAndVersion"

